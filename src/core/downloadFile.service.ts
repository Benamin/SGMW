import {AlertController, LoadingController, Platform} from "ionic-angular";import {File} from "@ionic-native/file";import {FileTransfer, FileTransferObject} from "@ionic-native/file-transfer";import {Injectable} from "@angular/core";import {CommonService} from "./common.service";@Injectable()export class DownloadFileService {    storageDirectory;    constructor(private platform: Platform,                public file: File,                public commonSer: CommonService,                public transfer: FileTransfer,                public alertCtrl: AlertController,                public loadingCtrl: LoadingController) {    }    downloadVideo(fileName, fileUrl) {        this.commonSer.alert(fileName);        this.commonSer.alert(fileUrl);        fileUrl = encodeURI(fileUrl);        if (this.platform.is('ios')) {            fileName = encodeURI(fileName);            this.storageDirectory = this.file.documentsDirectory;        } else if (this.platform.is('android')) {            this.file.createDir(this.file.externalDataDirectory, 'courseFile', true).then((result) => {                console.log("Directory created" + result);            });            this.storageDirectory = this.file.externalDataDirectory + 'courseFile/';            console.log(this.storageDirectory);        } else {            // exit otherwise, but you could add further types here e.g. Windows            return false;        }        const uploadLoading = this.loadingCtrl.create({            content: '下载中...',            dismissOnPageChange: true,            enableBackdropDismiss: true,        });        const fileTransfer: FileTransferObject = this.transfer.create();        const imageLocation = fileUrl;        this.commonSer.alert("storageDirectory：" + this.storageDirectory);        fileTransfer.download(imageLocation, this.storageDirectory + fileName).then((entry) => {            const alertSuccess = this.alertCtrl.create({                title: `Download Succeeded!`,                subTitle: `successfully downloaded to: ${entry.toURL()}`,                buttons: ['Ok']            });            alertSuccess.present();        }, (error) => {            const alertFailure = this.alertCtrl.create({                title: `Download Failed!`,                subTitle: `was not downloaded. Error code: ${error}`,                buttons: ['Ok']            });            alertFailure.present();        });        fileTransfer.onProgress(listener => {            let per = <any>(listener.loaded / listener.total) * 100;            per = Math.round(per * Math.pow(10, 2)) / Math.pow(10, 2)            uploadLoading.setContent('下载中...' + per + '%');        })    }    readFile(){    }}